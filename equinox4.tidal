# kn00t 4/18
# messing with scales & chords
# via https://github.com/yaxu/tidal-workshop/blob/master/summerschool.tidal
# https://github.com/tidalcycles/Tidal/blob/master/Sound/Tidal/Chords.hs

import Sound.Tidal.Scales

import qualified Sound.Tidal.Scales as S

import qualified Sound.Tidal.Chords as Ch

import Sound.Tidal.Scales

import Sound.Tidal.Chords

d1 $ slow 2 $ n (toScale S.egyptian "0 .. 15") # sound "arpy"

d2 $ sound "bd"

hush

Ch.major

S.egyptian

d1 $ up "0 1 2 3 4 5 6 7 8 9 10 11" # sound "arpy"

d1 $ n (toScale [0, 4, 7] "0 1 2 3") # sound "arpy"

d1 $ n (toScale S.dorian (run 8)) # sound "arpy"


d1 $ n (Ch.enchord [Ch.major, Ch.minor, Ch.minor7] "c g e f*2" "2") # sound "arpy"

hush

-- or make an abstraction:
let chords = Ch.enchord [Ch.major, Ch.minor, Ch.minor7, Ch.sus4] in
d1 $ n (chords "c g e f*2" "0 2") # stack [ sound "arpy:2", sound "arpy:1" ]

hush

